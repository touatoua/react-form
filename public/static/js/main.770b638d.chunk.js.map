{"version":3,"sources":["components/field-control.js","static/index.js","redux/actions/form.js","App.js","reportWebVitals.js","redux/reducers/form.js","redux/index.js","index.js"],"names":["fieldcontrol","props","type","placeholder","typeInput","name","option","onChange","label","value","format","decimalScale","suffix","require","star","Form","Group","as","Row","Label","column","md","className","Col","Control","required","map","e","i","Check","inline","checked","country","inputProps","autoFocus","onValueChange","customInput","fixedDecimalScale","titleData","genderData","ADD_FORM","EDIT_FORM","onAdd","payload","dispatch","setStateToAdd","onEdit","setStateToEdit","App","formReducer","useSelector","useDispatch","useState","validated","setvalidated","form","dataForm","setdataForm","gender","nationality","objForm","setobjForm","selectArray","setselectArray","currentPage","setcurrentPage","editing","setediting","selectEditRow","setselectEditRow","onChangeInput","target","pagination","paginationFactory","hideSizePerPage","sizePerPage","onPageChange","page","selectRow","mode","onSelect","row","isSelect","rowIndex","push","index","indexOf","splice","onSelectAll","rows","rowSelect","forEach","id","columns","formatter","cell","firstname","lastname","text","dataField","Button","variant","onClick","editRows","formAction","deleteRows","noValidate","onSubmit","event","preventDefault","currentTarget","checkValidity","stopPropagation","alert","lg","title","birthday","countryList","getData","citizen_id","phone","passport","onChangeNumber","salary","hidden","filtered","filter","arr","keyField","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","localStorage","getItem","JSON","parse","state","length","setItem","stringify","combineReducers","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.770b638d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form, Col, Row } from \"react-bootstrap\";\r\n// import CountrySelect from 'react-bootstrap-country-select';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nexport default function fieldcontrol(props) {\r\n    const { type, placeholder, typeInput, name, option, onChange, label, value, format, decimalScale, suffix, require, star } = props\r\n    switch (type) {\r\n        case 'text':\r\n            return (\r\n                <Form.Group as={Row} >\r\n                    <Form.Label column md={3}>\r\n                        {label} {star && <span className='-require' >*</span>}\r\n                    </Form.Label>\r\n                    <Col >\r\n                        <Form.Control\r\n                            name={name}\r\n                            type={typeInput}\r\n                            placeholder={placeholder}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            format={format}\r\n                            required={require}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n            )\r\n        case 'select':\r\n            return (\r\n                <Form.Group as={Row} >\r\n                    <Form.Label column md={3} >\r\n                        {label}{star && <span className='-require' >*</span>}\r\n                    </Form.Label>\r\n                    <Col >\r\n                        <Form.Control as=\"select\" onChange={onChange} name={name} required={require} value={value}>\r\n                            {option.map((e, i) =>\r\n                                name === 'nationality' ? <option value={e.label} key={i}>{e.label}</option>\r\n                                    : <option value={e} key={i}>{e}</option>\r\n                            )}\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n            )\r\n\r\n        case 'date':\r\n            return (\r\n                <Form.Group as={Row} >\r\n                    <Form.Label column md={3}>\r\n                        {label}{star && <span className='-require' >*</span>}\r\n                    </Form.Label>\r\n                    <Col >\r\n                        <Form.Control type=\"date\" name={name} onChange={onChange} required={require} value={value} />\r\n                    </Col>\r\n                </Form.Group>\r\n            )\r\n        case 'radio':\r\n            return (\r\n                <Form.Group as={Row} >\r\n                    <Form.Label column md={3}>\r\n                        {label}{star && <span className='-require' >*</span>}\r\n                    </Form.Label>\r\n                    <Col >\r\n                        {option.map((e, i) =>\r\n                            <Form.Check\r\n                                inline label={e}\r\n                                type={'radio'}\r\n                                key={i}\r\n                                name={name}\r\n                                onChange={onChange}\r\n                                value={e}\r\n                                checked={e === value}\r\n                                required={require}\r\n                            />\r\n\r\n                        )}\r\n\r\n                    </Col>\r\n                </Form.Group>\r\n            )\r\n\r\n        case 'phone':\r\n            return (\r\n                <Form.Group as={Row} >\r\n                    <Form.Label column md={3}>\r\n                        {label}{star && <span className='-require' >*</span>}\r\n                    </Form.Label>\r\n                    <Col >\r\n                        <PhoneInput\r\n                            country='th'\r\n                            placeholder=\"Enter phone number\"\r\n                            value={value}\r\n                            onChange={onChange}\r\n                            inputProps={{\r\n                                name: 'phone',\r\n                                required: true,\r\n                                autoFocus: true\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n            )\r\n\r\n        case 'citizen':\r\n            return (\r\n                <Form.Group as={Row} >\r\n                    <Form.Label column md={3}>\r\n                        {label}{star && <span className='-require' >*</span>}\r\n                    </Form.Label>\r\n                    <Col >\r\n                        <NumberFormat\r\n                            placeholder={placeholder}\r\n                            value={value}\r\n                            format={format}\r\n                            type={typeInput}\r\n                            onValueChange={onChange}\r\n                            customInput={Form.Control}\r\n                            required={require}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n            )\r\n\r\n        case 'number':\r\n            return (\r\n                <Form.Group as={Row} >\r\n                    <Form.Label column md={3}>\r\n                        {label}{star && <span className='-require' >*</span>}\r\n                    </Form.Label>\r\n                    <Col >\r\n                        <NumberFormat\r\n                            placeholder={placeholder}\r\n                            value={value}\r\n                            format={format}\r\n                            type={typeInput}\r\n                            onValueChange={onChange}\r\n                            customInput={Form.Control}\r\n                            decimalScale={decimalScale}\r\n                            fixedDecimalScale={decimalScale}\r\n                            suffix={suffix}\r\n                            required={require} />\r\n                    </Col>\r\n                </Form.Group>\r\n            )\r\n\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n","export const titleData = [\r\n    'Mr.',\r\n    'Mrs.',\r\n    'Miss'\r\n]\r\n\r\nexport const genderData = [\r\n    'Male',\r\n    'Female',\r\n    'Unisex'\r\n\r\n]","export const ADD_FORM = 'ADD_FORM'\r\nexport const DELETE_FORM = 'DELETE_FORM'\r\nexport const EDIT_FORM = 'EDIT_FORM'\r\n\r\n\r\nexport const setStateToAdd = (payload) => ({\r\n    type: ADD_FORM,\r\n    payload: payload\r\n})\r\n\r\nexport const setStateToDelete = (payload) => ({\r\n    type: DELETE_FORM,\r\n    payload: payload\r\n})\r\n\r\nexport const setStateToEdit = (payload) => ({\r\n    type: EDIT_FORM,\r\n    payload\r\n})\r\n\r\n\r\n\r\nexport const onAdd = (payload) => {\r\n    return dispatch => {\r\n        dispatch(\r\n            setStateToAdd(payload))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const onDelete = (payload) => {\r\n    return dispatch => {\r\n        dispatch(setStateToDelete(payload))\r\n    }\r\n}\r\n\r\nexport const onEdit = (payload) => {\r\n    return dispatch => {\r\n        dispatch(setStateToEdit(payload))\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport './App.scss';\r\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\r\nimport Fieldcontrol from '../src/components/field-control'\r\nimport { titleData, genderData } from '../src/static/index'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport countryList from \"react-select-country-list\";\r\nimport * as formAction from '../src/redux/actions/form'\r\n\r\n\r\n\r\nfunction App() {\r\n  const formReducer = useSelector(({ formReducer }) => formReducer)\r\n  const dispatch = useDispatch()\r\n\r\n  const [validated, setvalidated] = useState(false)\r\n  const [dataForm, setdataForm] = useState(formReducer.form)\r\n  const [objForm, setobjForm] = useState({ gender: 'Male', nationality: 'Thailand' })\r\n  // const [checkAll, setcheckAll] = useState(false)\r\n  const [selectArray, setselectArray] = useState([])\r\n  const [currentPage, setcurrentPage] = useState(0)\r\n  const [editing, setediting] = useState(false)\r\n  const [selectEditRow, setselectEditRow] = useState(0)\r\n\r\n  const onChangeInput = ({ target: { name, value } }) => {\r\n    setobjForm({ ...objForm, [name]: value })\r\n\r\n  }\r\n\r\n  const onChangeIdCard = (e) => {\r\n    setobjForm({ ...objForm, citizen_id: e.value })\r\n  }\r\n\r\n  const onChangePhone = (e) => {\r\n    setobjForm({ ...objForm, phone: e })\r\n  }\r\n\r\n  const onChangeNumber = (e, name) => {\r\n    setobjForm({ ...objForm, [name]: e.value })\r\n\r\n  }\r\n\r\n  const deleteRows = (rowIndex) => {\r\n    dataForm.splice(((currentPage - 1) * 5) + rowIndex, 1)\r\n    dispatch(formAction.onEdit(dataForm))\r\n  }\r\n\r\n  const editRows = (rowIndex) => {\r\n    setselectEditRow(rowIndex)\r\n    setobjForm(dataForm[rowIndex])\r\n    setediting(true)\r\n  }\r\n\r\n  const onSaveEdit = () => {\r\n    dataForm[selectEditRow] = objForm\r\n    setdataForm([...dataForm])\r\n    dispatch(formAction.onEdit(dataForm))\r\n    setediting(false)\r\n\r\n  }\r\n\r\n\r\n  const onDeleteSelect = () => {\r\n    let filtered = dataForm.filter(function (value, index, arr) {\r\n      return selectArray.indexOf(index) === -1\r\n    });\r\n    setdataForm(filtered)\r\n    dispatch(formAction.onEdit(filtered))\r\n\r\n    setselectArray([])\r\n\r\n  }\r\n\r\n  const pagination = paginationFactory({\r\n    hideSizePerPage: true,\r\n    sizePerPage: 5,\r\n    onPageChange: (page) => {\r\n      setcurrentPage(page)\r\n    }\r\n  });\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    onSelect: (row, isSelect, rowIndex, e) => {\r\n\r\n      switch (isSelect) {\r\n        case true:\r\n          selectArray.push(rowIndex)\r\n          break;\r\n        case false:\r\n          let index = selectArray.indexOf(rowIndex);\r\n          selectArray.splice(index, 1)\r\n          break;\r\n        default:\r\n          break;\r\n\r\n\r\n      }\r\n      setselectArray([...selectArray])\r\n    },\r\n\r\n    onSelectAll: (isSelect, rows, e) => {\r\n      if (isSelect) {\r\n        let rowSelect = []\r\n        rows.forEach((row, i) => {\r\n          selectArray.push(i)\r\n          rowSelect.push(row.id)\r\n        })\r\n        setselectArray([...selectArray])\r\n        return rowSelect;\r\n      } else {\r\n        setselectArray([])\r\n        return []\r\n      }\r\n    }\r\n  };\r\n\r\n  const submit = (event) => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      alert('please complete all requried input field')\r\n    } else {\r\n      dispatch(formAction.onAdd(objForm))\r\n    }\r\n    setvalidated(true);\r\n\r\n  }\r\n\r\n  const editFormatter = (cell, row, rowIndex) => {\r\n    return (\r\n      <Row className='fn-table align-items-center'>\r\n        <Button variant={'link'} onClick={() => editRows(rowIndex)}>\r\n          EDIT\r\n        </Button>\r\n          /\r\n        <Button variant={'link'} onClick={() => deleteRows(rowIndex)}>\r\n          <span className='-require'>DELETE</span>\r\n        </Button>\r\n\r\n\r\n      </Row>\r\n\r\n    );\r\n  };\r\n\r\n  const nameFormatter = (cell, row, rowIndex) => {\r\n    return (\r\n      <div>{`${row.firstname} ${row.lastname}`}</div>\r\n    )\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      formatter: nameFormatter,\r\n      text: 'NAME'\r\n    },\r\n    {\r\n      dataField: 'gender',\r\n      text: 'GENDER'\r\n    },\r\n    {\r\n      dataField: 'phone',\r\n      text: 'MOBILE PHONE'\r\n    },\r\n    {\r\n      dataField: 'nationality',\r\n      text: 'NATIONALITY'\r\n    },\r\n    {\r\n      formatter: editFormatter,\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className='form'>\r\n      <Form noValidate validated={validated} onSubmit={submit}>\r\n        <Form.Row>\r\n          <Col lg={3} md={4}>\r\n            <Fieldcontrol\r\n              value={objForm.title}\r\n              label='Title :'\r\n              type='select'\r\n              typeInput='text'\r\n              name='title'\r\n              option={titleData}\r\n              onChange={onChangeInput}\r\n              require={true}\r\n              star={true}\r\n            />\r\n          </Col>\r\n          <Col lg={4} md={8}>\r\n            <Fieldcontrol\r\n              value={objForm.firstname}\r\n              label='First Name :'\r\n              type='text'\r\n              placeholder='First Name'\r\n              typeInput='text'\r\n              name='firstname'\r\n              onChange={onChangeInput}\r\n              require={true}\r\n              star={true}\r\n\r\n            />\r\n          </Col>\r\n          <Col lg={5} md={6}>\r\n            <Fieldcontrol\r\n              value={objForm.lastname}\r\n              label='Last Name :'\r\n              type='text'\r\n              placeholder='Last Name'\r\n              typeInput='text'\r\n              name='lastname'\r\n              onChange={onChangeInput}\r\n              require={true}\r\n              star={true}\r\n\r\n            />\r\n          </Col>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Col lg={4} md={6}>\r\n            <Fieldcontrol\r\n              value={objForm.birthday}\r\n              onChange={onChangeInput}\r\n              label='Birth Day :'\r\n              type='date'\r\n              name='birthday'\r\n              require={true}\r\n              star={true}\r\n\r\n            />\r\n          </Col>\r\n          <Col lg={8} md={6}>\r\n            <Fieldcontrol\r\n              // defaultValue={'Thailand'}\r\n              value={objForm.nationality}\r\n              label='Nationality :'\r\n              type='select'\r\n              typeInput='text'\r\n              name='nationality'\r\n              option={countryList().getData()}\r\n              onChange={onChangeInput}\r\n              require={true}\r\n\r\n\r\n            />\r\n          </Col>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Col lg={4}>\r\n            <Fieldcontrol\r\n              value={objForm.citizen_id}\r\n              format='#-####-#####-##-#'\r\n              label='CitizenID :'\r\n              type='citizen'\r\n              placeholder='CitizenID'\r\n              name='citizen_id'\r\n              onChange={onChangeIdCard}\r\n              require={true}\r\n\r\n            />\r\n          </Col>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Col lg={4} >\r\n            <Fieldcontrol\r\n              label='Gender :'\r\n              type='radio'\r\n              option={genderData}\r\n              name='gender'\r\n              onChange={onChangeInput}\r\n              value={objForm.gender}\r\n              require={true}\r\n\r\n\r\n            />\r\n          </Col>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Col lg={6} >\r\n            <Fieldcontrol\r\n              label='Mobile Phone :'\r\n              type='phone'\r\n              name='phone'\r\n              onChange={onChangePhone}\r\n              require={true}\r\n              value={objForm.phone}\r\n              star={true}\r\n\r\n            />\r\n\r\n          </Col>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Col lg={6}>\r\n            <Fieldcontrol\r\n              value={objForm.passport}\r\n              label='Passport No :'\r\n              type='text'\r\n              placeholder='Passport No'\r\n              typeInput='number'\r\n              name='passport'\r\n              onChange={onChangeInput}\r\n              require={true}\r\n\r\n            />\r\n          </Col>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Col lg={6}>\r\n            <Fieldcontrol\r\n              label='Expected Salary :'\r\n              type='number'\r\n              decimalScale={2}\r\n              placeholder='Expected Salary'\r\n              name='salary'\r\n              onChange={(e) => onChangeNumber(e, 'salary')}\r\n              value={objForm.salary}\r\n              require={true}\r\n              star={true}\r\n\r\n            />\r\n\r\n          </Col>\r\n\r\n          {editing ?\r\n            <Col className='btn'>\r\n              <Button className='mr-2' variant={'success'} hidden={!editing} onClick={onSaveEdit}>save</Button>\r\n              <Button\r\n                variant={'danger'}\r\n                hidden={!editing}\r\n                onClick={() => {\r\n                  // Object.keys(objForm).forEach(k => objForm[k] = null);\r\n                  // setobjForm({ ...objForm, gender: 'Male', nationality: 'Thailand' })\r\n                  setediting(false)\r\n                }}>\r\n                cancel\r\n            </Button>\r\n            </Col>\r\n            :\r\n            <Col className='btn'>\r\n              <Button hidden={editing} type='submit'>Submit</Button>\r\n            </Col>\r\n          }\r\n\r\n        </Form.Row>\r\n      </Form>\r\n\r\n      <div className='uper-table'>\r\n        <Form.Row>\r\n          <Col className='col-8'>\r\n            <Form.Group as={Row} >\r\n              {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" onChange={() => setcheckAll(!checkAll)} />\r\n              </Form.Group>\r\n              <Col >\r\n                <Form.Label column >\r\n                  Select All\r\n                </Form.Label>\r\n              </Col> */}\r\n              <Col>\r\n                <Button onClick={onDeleteSelect} variant={'danger'}>Delete Select</Button>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form.Row>\r\n      </div>\r\n      <BootstrapTable keyField='id' data={dataForm} columns={columns} pagination={pagination} selectRow={selectRow} />\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ADD_FORM, EDIT_FORM } from '../actions/form'\r\n\r\nconst initialState = {\r\n    form: localStorage.getItem('form') ? JSON.parse(localStorage.getItem('form')) : []\r\n}\r\n\r\nconst formReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case ADD_FORM:\r\n            let id = state.form.length ? state.form[state.form.length - 1].id + 1 : 1\r\n            state.form.push({ ...payload, id })\r\n            localStorage.setItem('form', JSON.stringify(state.form))\r\n            return { ...state }\r\n\r\n        case EDIT_FORM:\r\n            localStorage.setItem('form', JSON.stringify(payload))\r\n\r\n            return { ...state }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default formReducer;\r\n","import { combineReducers } from 'redux'\r\nimport formReducer from './reducers/form'\r\n\r\nexport default combineReducers({ formReducer })","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css'; // or include from a CDN\r\nimport 'react-bootstrap-country-select/dist/react-bootstrap-country-select.css';\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport reducer from '../src/redux/index'\r\nimport thunk from 'redux-thunk'\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store} >\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}